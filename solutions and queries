> show databases;
BWE29   0.000GB
admin   0.000GB
config  0.000GB
local   0.000GB

> use BWE29;
switched to db BWE29

> show collections;
MovieDetails
Orders
Products
---------------------------------------------------------------------------------------

Find all the information about each products
 db.Products.find({}).pretty();
----------------------------------------------------------------------------------------
Find the product price which are between 400 to 800
 db.Products.find({product_price: {$gt:400, $lt:800}}).pretty();
----------------------------------------------------------------------------------------
Find the product price which are not between 400 to 600
 db.Products.find({product_price: {$not:{$gt:400, $lt:600}}}).pretty();
----------------------------------------------------------------------------------------
List the four product which are greater than 500 in price 
 db.Products.find({product_price: {$gt:500}}).limit(4).pretty();
----------------------------------------------------------------------------------------
Find the product name and product material of each products
 db.Products.find({},{product_name:1,product_material:1,_id:0}).pretty();
----------------------------------------------------------------------------------------
Find the product with a row id of 10
 db.Products.find({id:"10"}).pretty();
	or
 db.Products.find({}).skip(9).limit(1).pretty();
----------------------------------------------------------------------------------------
Find only the product name and product material
 db.Products.find({},{product_name:1,product_material:1,_id:0}).pretty();
----------------------------------------------------------------------------------------
Find all products which contain the value of soft in product material 
 db.Products.find({product_material: {$regex: /Soft/}}).pretty();
----------------------------------------------------------------------------------------
Find products which contain product color indigo  and product price 492.00
 db.Products.find({$and:[{product_color:"indigo"},{product_price:492}]}).pretty();
-----------------------------------------------------------------------------------------
Delete the products which product price value are same
db.Products.aggregate([
 {$group:{
  _id: "$product_price",
  count: {
    $sum: 1
  }
}} 
,
 {$match:{
  count: {$gt:1}
}}
]).forEach(function(doc){
  db.Products.remove({"product_price":doc._id})
});
